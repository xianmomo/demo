<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sf.itmro.svn.dao.TbSvnUserDirMapper">
	<resultMap id="BaseResultMap" type="com.sf.itmro.svn.model.TbSvnUserDir">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="user_id" property="userId" jdbcType="VARCHAR" />
		<result column="dir_id" property="dirId" jdbcType="VARCHAR" />
		<result column="valid_begintime" property="validBegintime" jdbcType="TIMESTAMP" />
		<result column="valid_endtime" property="validEndtime" jdbcType="TIMESTAMP" />
		<result column="auth" property="auth" jdbcType="VARCHAR" />
		<result column="create_id" property="createId" jdbcType="VARCHAR" />
		<result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
	</resultMap>
	<sql id="Base_Column_List">
		id, user_id, dir_id, valid_begintime, valid_endtime, auth, create_id, create_time
	</sql>
	<sql id="Query_where">
		<where>
			<if test="userId != null and userId !=''">
				and user_id = #{userId}
			</if>
			<if test="dirId != null and dirId !=''">
				and dir_id = #{dirId}
			</if>
		</where>
	</sql>
	<select id="queryData" resultMap="BaseResultMap" parameterType="map">
		select
		<include refid="Base_Column_List" />
		from tb_svn_user_dir
		<include refid="Query_where"></include>
	</select>
	
	<select id="queryUserDirByRemind" resultType="map" parameterType="map">
		select distinct 
		case tsr.resp_type when "0" then concat(tsr.resp_name,":",tsd.dir_path)
						   when "2" then concat(tsr.resp_name,":",tsd.dir_path)
			else tsd.dir_path end
			 as "dirPath",
		tsud.auth as "dirAuth",DATE_FORMAT(tsud.valid_endtime,'%Y-%m-%d') as "validEndtime",tsud.valid_endtime from tb_svn_user_dir tsud,tb_svn_dir tsd,tb_svn_resp tsr
		where tsud.dir_id = tsd.dir_id 
		and tsd.resp_id=tsr.resp_id
		and DATE_FORMAT(tsud.valid_endtime,'%Y-%m-%d') &lt;= #{validEndtimeEnd} 
		and DATE_FORMAT(tsud.valid_endtime,'%Y-%m-%d') &gt;= #{validEndtimeBegin} 
		and tsud.user_id=#{userId} 
		order by tsud.valid_endtime desc
	</select>
	
	<select id="queryUserDirMapByUserId" resultType="map" parameterType="map">
		SELECT CONCAT(tsr.resp_name,":",tsd.dir_path) AS dir_path, DATE_FORMAT(tsud.valid_begintime,'%Y-%m-%d') AS begin_time, DATE_FORMAT(tsud.valid_endtime,'%Y-%m-%d') AS end_time,tsud.auth
		FROM tb_svn_user_dir tsud,tb_svn_dir tsd,tb_svn_resp tsr
		WHERE tsud.dir_id = tsd.dir_id AND tsd.resp_id = tsr.resp_id AND tsud.user_id=#{userId}
		<if test="repositoryType!=null and repositoryType!=''">
			and tsr.resp_type = #{repositoryType}
		</if>
		<if test="repositoryTypeNot!=null and repositoryTypeNot!=''">
			and tsr.resp_type != #{repositoryTypeNot}
		</if>
		ORDER BY tsr.resp_name,tsd.dir_path;
	</select>
	
	<select id="queryUserDirOverdueCount" resultType="java.lang.Integer" parameterType="map">
		select count(1) from tb_svn_user_dir tsud,tb_svn_dir tsd,tb_svn_resp tsr
		where tsud.dir_id = tsd.dir_id 
		and tsd.resp_id=tsr.resp_id
		and DATE_FORMAT(tsud.valid_endtime,'%Y-%m-%d') &lt; #{overdueTimeBefore} 
	</select>

	<insert id="insertSelective" parameterType="com.sf.itmro.svn.model.TbSvnUserDir">
		insert into tb_svn_user_dir
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="userId != null">
				user_id,
			</if>
			<if test="dirId != null">
				dir_id,
			</if>
			<if test="validBegintime != null">
				valid_begintime,
			</if>
			<if test="validEndtime != null">
				valid_endtime,
			</if>
			<if test="auth != null">
				auth,
			</if>
			<if test="createId != null">
				create_id,
			</if>
			<if test="createTime != null">
				create_time,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="userId != null">
				#{userId,jdbcType=VARCHAR},
			</if>
			<if test="dirId != null">
				#{dirId,jdbcType=VARCHAR},
			</if>
			<if test="validBegintime != null">
				#{validBegintime,jdbcType=TIMESTAMP},
			</if>
			<if test="validEndtime != null">
				#{validEndtime,jdbcType=TIMESTAMP},
			</if>
			<if test="auth != null">
				#{auth,jdbcType=VARCHAR},
			</if>
			<if test="createId != null">
				#{createId,jdbcType=VARCHAR},
			</if>
			<if test="createTime != null">
				#{createTime,jdbcType=TIMESTAMP},
			</if>
		</trim>
	</insert>
	
	<update id="updateByPrimaryKeySelective" parameterType="com.sf.itmro.svn.model.TbSvnUserDir">
		update tb_svn_user_dir
		<set>
			<if test="userId != null">
				user_id = #{userId,jdbcType=VARCHAR},
			</if>
			<if test="dirId != null">
				dir_id = #{dirId,jdbcType=VARCHAR},
			</if>
			<if test="validBegintime != null">
				valid_begintime = #{validBegintime,jdbcType=TIMESTAMP},
			</if>
			<if test="validEndtime != null">
				valid_endtime = #{validEndtime,jdbcType=TIMESTAMP},
			</if>
			<if test="auth != null">
				auth = #{auth,jdbcType=VARCHAR},
			</if>
			<if test="createId != null">
				create_id = #{createId,jdbcType=VARCHAR},
			</if>
			<if test="createTime != null">
				create_time = #{createTime,jdbcType=TIMESTAMP},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>

	<delete id="deleteUserDirAuth" parameterType="map">
		delete from tb_svn_user_dir
		where 1=1
		<if test="respId != null and respId!=''">
			and exists(select 1 from tb_svn_dir tsd where tb_svn_user_dir.dir_id = tsd.dir_id and
			tsd.resp_id=#{respId})
		</if>
		<if test="userId != null and userId!=''">
			and tb_svn_user_dir.user_id=#{userId}
		</if>
		<if test="dirId != null and dirId!=''">
			and tb_svn_user_dir.dir_id=#{dirId}
		</if>
		<if test="validEndtime != null and validEndtime !=''">
			and DATE_FORMAT(tb_svn_user_dir.valid_endtime,'%Y-%m-%d') &lt; #{validEndtime}
		</if>
	</delete>
	
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from tb_svn_user_dir
		where id = #{id,jdbcType=INTEGER}
	</delete>
	
	<delete id="deleteCancelUser">
		delete from tb_svn_user_dir where 1=1 
		and exists (
			select 1 from tb_svn_user tsu where tsu.user_id = tb_svn_user_dir.user_id and date_format(tsu.cancel_date,'%Y-%m-%d') &lt; date_format(sysdate(),'%Y-%m-%d'))
	</delete>
	
	<delete id="deleteOverdueUserDir">
		delete from tb_svn_user_dir where 1=1 
		and DATE_FORMAT(tb_svn_user_dir.valid_endtime,'%Y-%m-%d') &lt; date_format(sysdate(),'%Y-%m-%d')
	</delete>
	
	<delete id="deleteUserDirByRespId" parameterType="java.lang.String">
		DELETE
		FROM tb_svn_user_dir
		WHERE EXISTS (
		SELECT 1
		FROM tb_svn_dir tsd
		WHERE tb_svn_user_dir.dir_id = tsd.dir_id AND tsd.resp_id=#{respId,jdbcType=VARCHAR} )
	</delete>
</mapper>