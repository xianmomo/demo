<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sf.itmro.svn.dao.TbSvnRespMapper">
	<resultMap id="BaseResultMap" type="com.sf.itmro.svn.model.TbSvnResp">
		<id column="resp_id" property="respId" jdbcType="VARCHAR" />
		<result column="resp_name" property="respName" jdbcType="VARCHAR" />
		<result column="resp_type" property="respType" jdbcType="VARCHAR" />
		<result column="resp_path" property="respPath" jdbcType="VARCHAR" />
		<result column="create_id" property="createId" jdbcType="VARCHAR" />
		<result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
		<result column="modify_id" property="modifyId" jdbcType="VARCHAR" />
		<result column="modify_time" property="modifyTime" jdbcType="TIMESTAMP" />
		<result column="remark" property="remark" jdbcType="VARCHAR" />
	</resultMap>
	<sql id="Base_Column_List">
		resp_id, resp_name, resp_type, resp_path, create_id, create_time, modify_id, modify_time,
		remark
	</sql>

	<sql id="Query_where">
		<where>
			<if test="respNameLike != null and respNameLike !=''">
				and locate(#{respNameLike},resp_name)>0
			</if>
			<if test="respName != null and respName !=''">
				and resp_name = #{respName}
			</if>
			<if test="createTimeBegin!=null and createTimeBegin !=''">
				and date_format(create_time,'%Y-%m-%d') &gt;= #{createTimeBegin}
			</if>
			<if test="createTimeEnd!=null and createTimeEnd !=''">
				and date_format(create_time,'%Y-%m-%d') &lt;= #{createTimeEnd}
			</if>
			<if test="respType != null and respType !=''">
				and resp_type = #{respType}
			</if>
			<if test="respId != null and respId !=''">
				and resp_id = #{respId}
			</if>
		</where>
	</sql>
	<select id="queryData" resultMap="BaseResultMap" parameterType="map">
		select
		<include refid="Base_Column_List" />
		from tb_svn_resp
		<include refid="Query_where"></include>
	</select>

	<insert id="insertSelective" parameterType="com.sf.itmro.svn.model.TbSvnResp">
		insert into tb_svn_resp
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="respId != null">
				resp_id,
			</if>
			<if test="respName != null">
				resp_name,
			</if>
			<if test="respType != null">
				resp_type,
			</if>
			<if test="respPath != null">
				resp_path,
			</if>
			<if test="createId != null">
				create_id,
			</if>
			<if test="createTime != null">
				create_time,
			</if>
			<if test="modifyId != null">
				modify_id,
			</if>
			<if test="modifyTime != null">
				modify_time,
			</if>
			<if test="remark != null">
				remark,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="respId != null">
				#{respId,jdbcType=VARCHAR},
			</if>
			<if test="respName != null">
				#{respName,jdbcType=VARCHAR},
			</if>
			<if test="respType != null">
				#{respType,jdbcType=VARCHAR},
			</if>
			<if test="respPath != null">
				#{respPath,jdbcType=VARCHAR},
			</if>
			<if test="createId != null">
				#{createId,jdbcType=VARCHAR},
			</if>
			<if test="createTime != null">
				#{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="modifyId != null">
				#{modifyId,jdbcType=VARCHAR},
			</if>
			<if test="modifyTime != null">
				#{modifyTime,jdbcType=TIMESTAMP},
			</if>
			<if test="remark != null">
				#{remark,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>

	<update id="updateByPrimaryKeySelective" parameterType="com.sf.itmro.svn.model.TbSvnResp">
		update tb_svn_resp
		<set>
			<if test="respName != null">
				resp_name = #{respName,jdbcType=VARCHAR},
			</if>
			<if test="respType != null">
				resp_type = #{respType,jdbcType=VARCHAR},
			</if>
			<if test="respPath != null">
				resp_path = #{respPath,jdbcType=VARCHAR},
			</if>
			<if test="createId != null">
				create_id = #{createId,jdbcType=VARCHAR},
			</if>
			<if test="createTime != null">
				create_time = #{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="modifyId != null">
				modify_id = #{modifyId,jdbcType=VARCHAR},
			</if>
			<if test="modifyTime != null">
				modify_time = #{modifyTime,jdbcType=TIMESTAMP},
			</if>
			<if test="remark != null">
				remark = #{remark,jdbcType=VARCHAR},
			</if>
		</set>
		where resp_id = #{respId,jdbcType=VARCHAR}
	</update>

	<select id="queryMapData" parameterType="map" resultType="map">
		SELECT DATE_FORMAT(create_time,'%Y-%m-%d %H:%i:%s') AS create_time_str,
			(select user_alias from sys_user su where su.user_code = t.create_id) as create_name,t.*
		FROM tb_svn_resp t
		<include refid="Query_where"></include>
		ORDER BY create_time DESC
		<if test="rowStart != null">
			LIMIT ${rowStart},${rows}
		</if>
	</select>
	
	<select id="queryDataToShowPermission" resultType="map" parameterType="map">
		SELECT CONCAT("R",tsr.resp_id) AS id, CONCAT("R",tsR.resp_id) AS "currentId",tsr.resp_name AS text,'0' AS "parentId"
		,"closed" as state
		FROM tb_svn_resp tsr
		WHERE 1=1 
		<if test="respType!=null and respType!=''">
			and tsr.resp_type=#{respType}
		</if>
		<if test="respTypeNot!=null and respTypeNot!=''">
			and tsr.resp_type !=#{respTypeNot}
		</if>
	</select>

	<select id="countData" resultType="java.lang.Integer" parameterType="map">
		select count(1) from tb_svn_resp
		<include refid="Query_where"></include>
	</select>
	
	<delete id="deleteRepository" parameterType="com.sf.itmro.svn.model.TbSvnResp">
		DELETE
		FROM tb_svn_resp
		WHERE tb_svn_resp.resp_id=#{respId,jdbcType=VARCHAR} 
	</delete>
	
	<select id="queryGroupDataByRespId" resultType="map" parameterType="com.sf.itmro.svn.model.TbSvnResp">
	 	SELECT DISTINCT tsg.group_name,(
		SELECT GROUP_CONCAT(t.group_name)
		FROM tb_svn_group t
		WHERE FIND_IN_SET(t.group_id,tsg.parent_id)>0) AS groups,
		(
		SELECT GROUP_CONCAT(tsu.user_name,'###',date_format(tsug.valid_begintime,'%Y-%m-%d'),'###',date_format(tsug.valid_endtime,'%Y-%m-%d'))
		FROM tb_svn_user_group tsug,tb_svn_user tsu
		WHERE tsug.user_id = tsu.user_id AND tsug.group_id = tsg.group_id) AS user_permission
		FROM tb_svn_group tsg
		WHERE FIND_IN_SET(tsg.group_id,(
		SELECT GROUP_CONCAT(tsg.group_id,',',tsg.parent_id)
		FROM tb_svn_group_dir tsgd,tb_svn_group tsg,tb_svn_dir tsd
		WHERE tsgd.dir_id = tsd.dir_id AND tsgd.group_id = tsg.group_id AND tsd.resp_id=#{respId}))>0 
		ORDER BY group_name
	</select>
	<select id="queryDirAndPermissionByRespId" resultType="map" parameterType="com.sf.itmro.svn.model.TbSvnResp">
		SELECT tsd.dir_path,(
		SELECT GROUP_CONCAT(tsg.group_name,' = ',tsgd.auth)
		FROM tb_svn_group_dir tsgd,tb_svn_group tsg
		WHERE tsgd.group_id = tsg.group_id AND tsgd.dir_id = tsd.dir_id) AS group_permission,
		(
		SELECT GROUP_CONCAT(tsu.user_name,'###',tsud.auth,'###',date_format(tsud.valid_begintime,'%Y-%m-%d'),'###',date_format(tsud.valid_endtime,'%Y-%m-%d')) from tb_svn_user_dir tsud,tb_svn_user tsu where tsud.user_id = tsu.user_id and tsud.dir_id = tsd.dir_id) as user_permission
		FROM tb_svn_dir tsd
		WHERE tsd.resp_id=#{respId}
		ORDER BY dir_path
	</select>
	
	 
</mapper>